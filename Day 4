#include <stdio.h>
#include <stdlib.h>

// Function to process the dynamic array queries
int* dynamicArray(int n, int queries_rows, int queries_columns, int** queries, int* result_count) {
    // Allocate memory for seqList and initialize it
    int** seqList = (int**)malloc(n * sizeof(int*));
    int* seqSize = (int*)calloc(n, sizeof(int));
    for (int i = 0; i < n; i++) {
        seqList[i] = NULL;
    }
    
    int lastAnswer = 0;
    int* results = (int*)malloc(queries_rows * sizeof(int));
    int resultIndex = 0;

    for (int i = 0; i < queries_rows; i++) {
        int queryType = queries[i][0];
        int x = queries[i][1];
        int y = queries[i][2];
        
        int seqIndex = (x ^ lastAnswer) % n;
        
        if (queryType == 1) {
            seqSize[seqIndex]++;
            seqList[seqIndex] = (int*)realloc(seqList[seqIndex], seqSize[seqIndex] * sizeof(int));
            seqList[seqIndex][seqSize[seqIndex] - 1] = y;
        } else if (queryType == 2) {
            int value = seqList[seqIndex][y % seqSize[seqIndex]];
            lastAnswer = value;
            results[resultIndex++] = lastAnswer;
        }
    }

    *result_count = resultIndex;
    return results;
}

int main() {
    int n, q;
    scanf("%d %d", &n, &q);

    int** queries = (int**)malloc(q * sizeof(int*));
    for (int i = 0; i < q; i++) {
        queries[i] = (int*)malloc(3 * sizeof(int));
        scanf("%d %d %d", &queries[i][0], &queries[i][1], &queries[i][2]);
    }

    int result_count;
    int* results = dynamicArray(n, q, 3, queries, &result_count);

    for (int i = 0; i < result_count; i++) {
        printf("%d\n", results[i]);
    }

    // Free allocated memory
    for (int i = 0; i < q; i++) {
        free(queries[i]);
    }
    free(queries);
    free(results);

    return 0;
}
